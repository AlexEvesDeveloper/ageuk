<?php

namespace Ageuk\UtilBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;
use JMS\Serializer\Annotation\ExclusionPolicy;
use JMS\Serializer\Annotation\Expose;

/**
 * @ORM\Entity
 *
 * @ExclusionPolicy("all")
 */
class DelegateUser extends User
{
    /**
     * @var string
     *
     * @ORM\Column(name="first_name", type="string", length=64)
     *
     * @Expose
     */
    private $firstName;

    /**
     * @var string
     *
     * @ORM\Column(name="last_name", type="string", length=64)
     *
     * @Expose
     */
    private $lastName;

    /**
     * @ORM\ManyToMany(targetEntity="Event", mappedBy="delegates")
     */
    private $events;

    /**
     * @ORM\ManyToMany(targetEntity="Course", mappedBy="subscribedDelegates")
     */
    private $subscribedCourses;

    public function __construct()
    {
    	$this->events = new ArrayCollection();
    	$this->subscribedCourses = new ArrayCollection();
    }

    /**
     * @inheritDoc
     */
    public function getRoles()
    {
        return array('ROLE_DELEGATE');
    }

    /**
     * Set firstName
     *
     * @param string $firstName
     * @return DelegateUser
     */
    public function setFirstName($firstName)
    {
        $this->firstName = $firstName;

        return $this;
    }

    /**
     * Get firstName
     *
     * @return string 
     */
    public function getFirstName()
    {
        return $this->firstName;
    }

    /**
     * Set lastName
     *
     * @param string $lastName
     * @return DelegateUser
     */
    public function setLastName($lastName)
    {
        $this->lastName = $lastName;

        return $this;
    }

    /**
     * Get lastName
     *
     * @return string 
     */
    public function getLastName()
    {
        return $this->lastName;
    }

    /**
     * Add events
     *
     * @param \Ageuk\UtilBundle\Entity\Event $events
     * @return DelegateUser
     */
    public function addEvent(\Ageuk\UtilBundle\Entity\Event $events)
    {
        $this->events[] = $events;

        return $this;
    }

    /**
     * Remove events
     *
     * @param \Ageuk\UtilBundle\Entity\Event $events
     */
    public function removeEvent(\Ageuk\UtilBundle\Entity\Event $events)
    {
        $this->events->removeElement($events);
    }

    /**
     * Get events
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getEvents()
    {
        return $this->events;
    }

    /**
     * Add subscribedCourses
     *
     * @param \Ageuk\UtilBundle\Entity\Event $subscribedCourses
     * @return DelegateUser
     */
    public function addSubscribedCourse(\Ageuk\UtilBundle\Entity\Event $subscribedCourses)
    {
        $this->subscribedCourses[] = $subscribedCourses;

        return $this;
    }

    /**
     * Remove subscribedCourses
     *
     * @param \Ageuk\UtilBundle\Entity\Event $subscribedCourses
     */
    public function removeSubscribedCourse(\Ageuk\UtilBundle\Entity\Event $subscribedCourses)
    {
        $this->subscribedCourses->removeElement($subscribedCourses);
    }

    /**
     * Get subscribedCourses
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getSubscribedCourses()
    {
        return $this->subscribedCourses;
    }
}
